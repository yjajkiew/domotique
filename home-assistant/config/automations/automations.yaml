#########
# LIGHT #
#########

# Bedroom wake-up light
- alias: Bedroom wake-up light
  trigger:
  - platform: time
    at: input_datetime.wakeup_weekday_timestart
  condition:
  - condition: state
    entity_id: person.yann
    state: home
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: input_boolean.wakeup_weekday
    state: 'on'
  action:
  - data:
      brightness: 1
    entity_id: light.master_bedroom_yann
    service: light.turn_on
  - delay: 00:00:10
  - data:
      brightness: 100
      entity_id: light.master_bedroom_yann
      transition: 600
    service: light.turn_on
    
# Bedroom light auto turn off
- alias: Bedroom light auto turn off
  trigger:
  - platform: time
    at: input_datetime.wakeup_weekday_timestop
  condition:
  - condition: state
    entity_id: person.yann
    state: home
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: input_boolean.wakeup_weekday
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: light.master_bedroom_yann
  - delay:
      seconds: 1
  - service: light.turn_on
    data:
      entity_id: light.master_bedroom_yann
      brightness: 100
  - delay:
      seconds: 1
  - service: light.turn_off
    data:
      entity_id: light.master_bedroom
      
# Mac webcam ON > turn on office light
- alias: Mac webcam ON > turn on office light
  trigger:
  - platform: state
    entity_id: binary_sensor.imac_camera_in_use
    from: 'off'
    to: 'on'
  action:
  - service: light.turn_on
    data:
      entity_id: 
       - light.bureau_guitares
       - light.bureau_guirlande_yann
       
# Mac non active > turn off office light
- alias: Mac non active > turn off office light
  trigger:
  - platform: state
    entity_id: binary_sensor.imac_active
    from: 'on'
    to: 'off'
  action:
  - service: light.turn_off
    data:
      entity_id: 
       - light.bureau_guitares
       - light.bureau_guirlande_yann

##########      
# SWITCH #
##########

# Sèche serviette auto turn for Yann
- alias: Sèche serviette auto turn for Yann # sensor.oneplus_a5000_next_alarm
  trigger:
  - platform: template # right day and 10 minutes before phone alarm
    value_template: '{{ states("sensor.date_time") == ((as_timestamp(states("sensor.oneplus_a5000_next_alarm"))- 10*60)|timestamp_custom("%Y-%m-%d, %H:%M")) }}'
  condition:
  - condition: state
    entity_id: person.yann
    state: home
  action:
  - service: script.turn_on
    data:
      entity_id: script.seche_serviette
  - service: system_log.write
    data_template:
      message: Launch sèche serviette script from automation
      level: info

# Sèche serviette auto turn for Manon
- alias: Sèche serviette auto turn on for Manon
  trigger:
  - platform: template # right day and 10 minutes before phone alarm
    value_template: '{{ states("sensor.date_time") == ((as_timestamp(states("sensor.oneplus_a5010_prochaine_alarme"))- 10*60)|timestamp_custom("%Y-%m-%d, %H:%M")) }}'
  condition:
  - condition: state
    entity_id: person.manon
    state: home
  action:
  - data:
      entity_id: script.seche_serviette
    service: script.turn_on
  - data_template:
      level: info
      message: Launch sèche serviette script from automation
    service: system_log.write

#########
# COVER #
#########

# Ouverture des volets
- alias: Ouverture des volets
  trigger:
  - platform: template
    value_template: '{{ states("sensor.time") == states("sensor.cover_auto_open") }}'
  condition:
  - condition: state
    entity_id: input_boolean.cover_automation
    state: 'on'
  action:
  - service: cover.open_cover
    data:
      entity_id: group.covers_all_open
  - service: system_log.write
    data_template:
      message: Automatically open covers
      level: info

# Fermeture des volets
- alias: Fermeture des volets
  trigger:
  - platform: template
    value_template: '{{ states("sensor.time") == states("sensor.cover_auto_close") }}'
  condition:
  - condition: state
    entity_id: input_boolean.cover_automation
    state: 'on'
  action:
  - service: cover.close_cover
    data:
      entity_id: group.covers_all_open
  - service: system_log.write
    data_template:
      message: Automatically close covers
      level: info